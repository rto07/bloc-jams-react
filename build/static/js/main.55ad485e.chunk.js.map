{"version":3,"sources":["components/Landing.js","Data/albums.js","components/Library.js","components/PlayerBar.js","components/Album.js","App.js","serviceWorker.js","index.js"],"names":["Landing","react_default","a","createElement","className","class","albums","title","artist","releaseInfo","albumCover","slug","songs","duration","audioSrc","Library","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","albumData","map","album","index","Link","to","concat","key","src","alt","length","Component","PlayerBar","Album","find","match","params","currentSong","isPlaying","isHovered","audioElement","document","play","setState","pause","song","isSameSong","setSong","_this2","id","onClick","handleSongClick","onMouseEnter","onMouseLeave","components_PlayerBar","isPaying","App","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55ad485e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Landing = () => (\n  <section className=\"landing\">\n     <h1 className=\"hero-title\">Turn the music up!</h1>\n\n\t\t<section className = \"selling points\">\n\t\t\t<div class = \"point\">\n\t\t\t\t<h2 className = \"point-title\">Choose your music</h2>\n\t\t\t\t<p className = \"point-description\">The world is full of music; why should you have to listen to music that someone else chose?</p>\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t<div className = \"point\">\n\t\t\t\t<h2 className = \"point-title\">Unlimited, streaming, ad-free</h2>\n        \t\t<p className = \"point-description\"> No arbitrary limits. No distractions. </p>\n\t\t\t</div>\n\n\t\t\t<div className = \"point\">\n\t\t\t\t<h2 className=\"point-title\">Mobile Enabled</h2>\n        \t\t<p className=\"point-description\">Listen to your music on the go. This streaming service is available on all mobile platforms.</p>\n\n\t\t\t</div>\n\t\t</section>\n\t</section>\n\t);\n\n\n\n\texport default Landing;","export default [{\n  title: 'The Colors',\n  artist: 'Pablo Picasso',\n  releaseInfo: '1909 Spanish Records',\n  albumCover: '/assets/images/album_covers/01.jpg',\n  slug: 'the-colors',\n  songs: [\n      { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\n      { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\n      { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\n      { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\n      { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' }\n  ]\n}, {\n    title: 'The Telephone',\n    artist: 'Guglielmo Marconi',\n    releaseInfo: '1909 EM',\n    albumCover: '/assets/images/album_covers/02.jpg',\n    slug: 'the-telephone',\n    songs: [\n      { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\n      { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\n      { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\n      { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\n      { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' }\n    ]\n}];","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport albumData from './../Data/albums';\n\nclass Library extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = { albums: albumData };\n\t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t<section className = \"library\">\n\t\t\t{\n\t\t\t\tthis.state.albums.map((album, index) =>\n\t\t\t\t\t<Link to = {`/album/${album.slug}`} key = {index} >\n\t\t\t\t\t\t<img src = {album.albumCover} alt = {album.title}/>\n\t\t\t\t\t\t<div>{album.title}</div>\n\t\t\t\t\t\t<div>{album.artist}</div>\n\t\t\t\t\t\t<div>{album.songs.length}songs</div>\n\t\t\t\t\t</Link>\n\t\t\t\t)\n\t\t\t}\t\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default Library;","import React, {Component} from 'react';\n\nclass PlayerBar extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<section className = \"player-bar\">\n\t\t\t\tplayer bar goes here\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default PlayerBar;","import React, { Component } from 'react';\nimport albumData from './../Data/albums';\nimport PlayerBar from './PlayerBar';\n\n\nclass Album extends Component {\n    constructor(props) {\n        super(props);\n\n\n        const album = albumData.find(album => {\n            return album.slug === this.props.match.params.slug\n        });\n\n        this.state = {\n            album: album,\n            currentSong: album.songs[0],\n            isPlaying: false,\n            isHovered: false\n        };\n\n        this.audioElement = document.createElement('audio');\n        this.audioElement.src = album.songs[0].audioSrc;\n    }\n\n    play() {\n        this.audioElement.play();\n        this.setState({ isPlaying: true });\n    }\n\n    pause() {\n        this.audioElement.pause();\n        this.setState({ isPlaying: false });\n    }\n\n    setSong(song) {\n        this.audioElement.src = song.audioSrc;\n        this.setState({ currentSong: song });\n    }\n\n    handleSongClick(song) {\n        const isSameSong = this.state.currentSong === song;\n        if (this.state.isPlaying && isSameSong) {\n            this.pause();\n        } else {\n            if (!isSameSong) { this.setSong(song); }\n            this.play();\n        }\n    }\n\n    onMouseEnter(index) {\n        this.setState({ isHovered: index });\n    }\n\n    onMouseLeave() {\n        this.setState({ isHovered: false });\n    }\n\n    isHovered(song, index) {\n        if (this.state.isHovered === song) {\n            return (<span className=\"icon ion-md-play\"></span>);\n        } else if (this.state.currentSong === song && this.state.isPlaying) {\n            return (<span className=\"icon ion-md-pause\"></span>);\n        } else if (this.state.isHovered === index && !this.state.isPlaying) {\n            return (<span className=\"icon ion-md-play\"></span>);\n        } else {\n            return (index + 1);\n        }\n    }\n\n\n    render() {\n        return (\n            <section className=\"album\">\n                <section id=\"album-info\">\n                    <img id=\"album-cover-art\" src={this.state.album.albumCover} alt={this.state.album.title} />\n                    <div className=\"album-details\">\n                        <h1 id=\"album-title\">{this.state.album.title}</h1>\n                        <h2 className=\"artist\">{this.state.album.artist}</h2>\n                        <div id=\"release-info\">{this.state.album.releaseInfo}</div>\n                    </div>\n                </section>\n                <table id=\"song-list\">\n                    <colgroup>\n                        <col id=\"song-number-column\" />\n                        <col id=\"song-title-column\" />\n                        <col id=\"song-duration-column\" />\n                    </colgroup>\n                    <tbody>\n                        {this.state.album.songs.map((song, index) =>\n                            <tr className=\"song\" key={index}\n                                onClick={() => this.handleSongClick(song)}\n                                onMouseEnter={() => this.onMouseEnter(index)}\n                                onMouseLeave={() => this.onMouseLeave(index)} >\n                                <td>{this.isHovered(song, index)}</td>\n                                <td>{song.title}</td>\n                                <td>{song.duration}</td>\n                            </tr>\n                        )\n                        }\n                    </tbody>\n                </table>\n                <PlayerBar isPlaying = {this.state.isPaying} currentSong = {this.state.currentSong} />\n            </section>\n        );\n    };\n}\n\n\nexport default Album;","import React, { Component } from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport './App.css';\nimport Landing from './components/Landing';\nimport Library from './components/Library';\nimport Album from './components/Album';\n\nclass App extends Component {\n  \n  render() {\n    \n    return (\n      \n      <div className = \"App\">\n      \n        <header>\n          <nav>\n            <Link to = \"/\"> Landing </Link>\n            <Link to = \"/library\"> Library </Link>\n          </nav>\n\n          <h1>Bloc Jams</h1>\n\n        </header>\n\n        <main>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/library\" component={Library} />\n          <Route path=\"/album/:slug\" component={Album} />\n         \n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\t document.getElementById('root') );\n\n\nserviceWorker.unregister();"],"sourceRoot":""}